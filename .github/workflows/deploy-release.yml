name: Build and deploy Docker and Helm
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+' # semver stable
      - 'v[0-9]+.[0-9]+.[0-9]+-*' # semver with prerelease suffix
jobs:
  metadata:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Parse version from tag
        id: version
        env:
          tag: ${{ github.ref_name }}
        run: |
          version=${tag#v}
          echo "version="$version"" >>"$GITHUB_OUTPUT"
  deploy-docker:
    runs-on: ubuntu-latest
    needs: metadata
    permissions:
      contents: read
      packages: write
    env:
      CONTAINER_REGISTRY: ghcr.io
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/setup-buildx-action@v3
      - name: Container metadata
        id: container-metadata
        uses: docker/metadata-action@v5
        with:
          images: "${{ env.CONTAINER_REGISTRY }}/${{ github.repository }}/learnrelease"
          tags: ${{ needs.metadata.outputs.version }}
      - name: Print container metadata
        run: |
          echo "tags: ${{ steps.container-metadata.outputs.tags }}"
          echo "labels: ${{ steps.container-metadata.outputs.labels }}"
      - name: Build and push container image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: |
            linux/amd64
            linux/arm64
          tags: ${{ steps.container-metadata.outputs.tags }}
          labels: ${{ steps.container-metadata.outputs.labels }}
  deploy-helm:
    runs-on: ubuntu-latest
    needs: metadata
    permissions:
      contents: read
      packages: write
    env:
      OCI_REGISTRY: ghcr.io
    steps:
      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.18.3
      - name: Helm login
        run: |
          helm registry login ${{env.OCI_REGISTRY }} \
            --username ${{ github.actor }} \
            --password ${{ secrets.GITHUB_TOKEN }}
      - name: Helm package and push
        id: deploy-helm
        working-directory: charts/learnrelease
        run: |
          version=${{ needs.metadata.outputs.version }}
          helm package --version $version --app-version $version .
          
          helm_packages=$(git status --short | sed s/^...//)
          oci_repo=oci://${{ env.OCI_REGISTRY }}/${{ github.repository }}/helm
          helm push learnrelease-$version.tgz $oci_repo
          
          echo "helm_packages="$helm_packages" >>"$GITHUB_OUTPUT"
      - name: Upload Helm packages to release
        run: |
          echo "${{steps.deploy-helm.outputs.helm_packages}}"
          echo ""
          echo ${{steps.deploy-helm.outputs.helm_packages}}
          
  

    

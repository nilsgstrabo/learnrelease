name: Prepare release PR

on:
    push: 
        tags:
            - '**'
        branches: 
            - main
    workflow_dispatch:

env:
    PRERELEASE_SUFFIX: rc

jobs:
    prepare-release:
        name: Prepare release
        runs-on: ubuntu-latest
        permissions: 
            pull-requests: write
            contents: write
            issues: write

        steps:
            - uses: actions/checkout@v4
              with:
                fetch-depth: 0

            - uses: actions/setup-go@v5
              with:
                  go-version-file: go.mod
            - name: Install git-semver
              run: |
                go install github.com/psanetra/git-semver/cli@v1.1.2
                # mv $(which cli) $(dirname $(which cli))/git-semver
            - name: Build release and prerelease tag
              id: ver
              run: |
                next_prerelease_tag=v$(cli next --pre-release-tag $PRERELEASE_SUFFIX --pre-release-counter)
                next_stable_tag=v$(cli next)
                latest_tag=v$(cli latest --include-pre-releases)

                if git show-ref --quiet --verify "refs/tags/${latest_tag}"; then
                    echo "Counting commits since ${latest_tag}"
                    commits_since_latest_tag=$(git log  --oneline ${latest_tag}..HEAD | wc -l)
                else
                    echo "Counting all commits"
                    commits_since_latest_tag=$(git log --oneline | wc -l)
                fi

                echo "next_prerelease_tag=$next_prerelease_tag" >>"$GITHUB_OUTPUT"
                echo "next_stable_tag=$next_stable_tag" >>"$GITHUB_OUTPUT"
                echo "latest_tag=$latest_tag" >>"$GITHUB_OUTPUT"
                echo "commits_since_latest_tag=$commits_since_latest_tag" >>"$GITHUB_OUTPUT"
            - name: Show computed version
              run: |
                echo "next_prerelease_tag = ${{ steps.ver.outputs.next_prerelease_tag }}"
                echo "next_stable_tag = ${{ steps.ver.outputs.next_stable_tag }}"
                echo "latest_tag = ${{ steps.ver.outputs.latest_tag }}"
                echo "commits_since_latest_tag = ${{ steps.ver.outputs.commits_since_latest_tag }}"

            - name: Generate stable release changelog
              uses: orhun/git-cliff-action@v3
              with:
                config: cliff.toml
                args:
                    -vv --tag ${{ steps.ver.outputs.next_stable_tag }} --ignore-tags ${{ env.PRERELEASE_SUFFIX }}
              env:
                OUTPUT: CHANGELOG.md
            - name: Update stable version in Chart.yaml
              env:
                tag: ${{steps.ver.outputs.next_stable_tag}}
              run: |
                version=${tag#v}
                yq \
                    '.version = env(version), .appVersion = env(version)' \
                    -i charts/learnrelease/Chart.yaml
                
            - name: Create stable release PR
              uses: peter-evans/create-pull-request@v7
              with:
                delete-branch: true
                title: "chore: release ${{ steps.ver.outputs.next_stable_tag }}"
                branch: release/stable
                labels: stablerelease

            - name: Check git status
              run: |
                git status

            # - name: Generate prerelease changelog
            #   uses: orhun/git-cliff-action@v3
            #   if: steps.ver.outputs.commits_since_latest_tag > 0
            #   with:
            #     config: cliff.toml
            #     args:
            #         -vv --tag ${{ steps.ver.outputs.next_prerelease_tag }}
            #   env:
            #     OUTPUT: CHANGELOG.md

            - name: Update prerelease version in Chart.yaml
              if: steps.ver.outputs.commits_since_latest_tag > 0
              env:
                tag: ${{steps.ver.outputs.next_prerelease_tag}}
              run: |
                version=${tag#v}
                yq \
                    '.version = env(version), .appVersion = env(version)' \
                    -i charts/learnrelease/Chart.yaml

            - name: Create prerelease PR
              uses: peter-evans/create-pull-request@v7
              with:
                delete-branch: true
                title: "chore: prerelease ${{ steps.ver.outputs.next_prerelease_tag }}"
                branch: release/prerelease
                labels: prerelease                

            

